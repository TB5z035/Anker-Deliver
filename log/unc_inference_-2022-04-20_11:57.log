[2022-04-20 11:57:23][__mp_main__	][INFO	] Run with 8 cpu
[2022-04-20 11:57:23][__mp_main__	][INFO	] Running config
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                          model: Res16UNet34C
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->              conv1_kernel_size: 5
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                        weights: None
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       weights1: /home/aidrive1/workspace/luoly/dataset/final/min_weights/LR/unc/1/512/checkpoint_NoneRes16UNet34Cbest_val.pth
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       weights2: /home/aidrive1/workspace/luoly/dataset/final/min_weights/LR/512/1/checkpoint_NoneRes16UNet34Cbest_val.pth
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       weights3: /home/aidrive1/workspace/luoly/dataset/final/min_weights/LR/1024/1/checkpoint_NoneRes16UNet34Cbest_val.pth
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->        weights_for_inner_model: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      dilations: [1, 1, 1, 1]
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   wrapper_type: None
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->            wrapper_region_type: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->            wrapper_kernel_size: 3
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     wrapper_lr: 0.1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           meanfield_iterations: 10
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->              crf_spatial_sigma: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->            crf_chromatic_sigma: 12
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      optimizer: SGD
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                             lr: 0.01
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   sgd_momentum: 0.9
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  sgd_dampening: 0.1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     adam_beta1: 0.9
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     adam_beta2: 0.999
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   weight_decay: 0.0001
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           param_histogram_freq: 100
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           save_param_histogram: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      iter_size: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    bn_momentum: 0.02
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      scheduler: StepLR
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       max_iter: 120000
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      step_size: 20000.0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     step_gamma: 0.1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     poly_power: 0.9
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      exp_gamma: 0.95
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  exp_step_size: 445
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                        log_dir: log
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       data_dir: data
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                        dataset: ScannetVoxelization2cmDataset
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    testdataset: ScannetVoxelization2cmtestDataset
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->              temporal_dilation: 30
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                temporal_numseq: 3
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      point_lim: -1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  pre_point_lim: -1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     batch_size: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                test_batch_size: 24
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     cache_data: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    num_workers: 0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                num_val_workers: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   ignore_label: 255
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->          return_transformation: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->         ignore_duplicate_class: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   partial_crop: 0.0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->          train_limit_numpoints: 0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   synthia_path: /home/chrischoy/datasets/Synthia/Synthia4D
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->            synthia_camera_path: /home/chrischoy/datasets/Synthia/%s/CameraParams/
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->  synthia_camera_intrinsic_file: intrinsics.txt
[2022-04-20 11:57:23][__mp_main__	][INFO	] ---> synthia_camera_extrinsics_file: Stereo_Right/Omni_F/%s.txt
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->         temporal_rand_dilation: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           temporal_rand_numseq: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   scannet_path: /opt/data//train
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->              scannet_test_path: /opt/data/full/train
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                stanford3d_path: /home/chrischoy/datasets/Stanford3D
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       is_train: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      stat_freq: 40
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                 test_stat_freq: 100
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                test_stat_freq1: 312
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      save_freq: 1000
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       val_freq: 2
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               empty_cache_freq: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    train_phase: train
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      val_phase: val
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->              overwrite_weights: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                         resume: None
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               resume_optimizer: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  eval_upsample: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->         lenient_weight_loading: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->         distributed_world_size: 2
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               distributed_rank: 0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->            distributed_backend: nccl
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->        distributed_init_method: 
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               distributed_port: 10010
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      device_id: 0
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           distributed_no_spawn: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    ddp_backend: c10d
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  bucket_cap_mb: 25
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   use_feat_aug: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->     data_aug_color_trans_ratio: 0.1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->      data_aug_color_jitter_std: 0.05
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                normalize_color: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->             data_aug_scale_min: 0.9
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->             data_aug_scale_max: 1.1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               data_aug_hue_max: 0.5
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->        data_aug_saturation_max: 0.2
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      visualize: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->          test_temporal_average: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                 visualize_path: outputs/visualize
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                save_prediction: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  save_pred_dir: outputs/pred
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     test_phase: test
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->   evaluate_original_pointcloud: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->       test_original_pointcloud: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                        is_cuda: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      load_path: 
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       log_step: 50
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      log_level: INFO
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                        num_gpu: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                           seed: 42
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       run_name: unc_inference_
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                      unc_round: 50
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                 unc_result_dir: results/
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                          wandb: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  train_dataset: 
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    val_dataset: 
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                 checkpoint_dir: /
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     optim_step: 1
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  validate_step: 500
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    train_epoch: 20000
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               train_batch_size: 8
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                 val_batch_size: 8
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                eval_result_dir: /
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  unc_stat_path: /
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                     save_epoch: 5
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                   ignore_index: 255
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                       do_train: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    do_validate: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->               do_unc_inference: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    do_unc_demo: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                    unc_dataset: ScannetVoxelization2cmtestDataset
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->           do_verbose_inference: False
[2022-04-20 11:57:23][__mp_main__	][INFO	] --->                  do_unc_render: True
[2022-04-20 11:57:23][__mp_main__	][INFO	] Model setup done
[2022-04-20 11:57:23][__mp_main__	][INFO	] 
Res16UNet34C(
  (conv0p1s1): MinkowskiConvolution(in=3, out=32, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
  (bn0): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (conv1p1s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bn1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block1): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (conv2p2s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bn2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block2): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=32, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=32, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (2): BasicBlock(
      (conv1): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (conv3p4s2): MinkowskiConvolution(in=64, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bn3): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block3): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=64, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=64, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (2): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (3): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (conv4p8s2): MinkowskiConvolution(in=128, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bn4): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block4): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=128, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (2): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (3): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (4): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
    (5): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (convtr4p16s2): MinkowskiConvolutionTranspose(in=256, out=256, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bntr4): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block5): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=384, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=384, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (convtr5p8s2): MinkowskiConvolutionTranspose(in=256, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bntr5): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block6): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=192, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=192, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (convtr6p4s2): MinkowskiConvolutionTranspose(in=128, out=96, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bntr6): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block7): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=128, out=96, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (convtr7p2s2): MinkowskiConvolutionTranspose(in=96, out=96, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
  (bntr7): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
  (block8): Sequential(
    (0): BasicBlock(
      (conv1): MinkowskiConvolution(in=128, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
      (downsample): Sequential(
        (0): MinkowskiConvolution(in=128, out=96, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): MinkowskiReLU()
    )
  )
  (final): MinkowskiConvolution(in=96, out=20, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
  (relu): MinkowskiReLU()
)
